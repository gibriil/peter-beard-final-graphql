### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type Armour {
  category: String!
  cost: Int!
  createdAt: DateTime!
  extraInfo: String!
  hits: Int!
  id: String!
  name: String!
  strengthReq: Int!
  type: String!
  updatedAt: DateTime!
  weight: Int!
}

input ArmourCreateInput {
  category: String!
  cost: Int!
  createdAt: DateTime
  extraInfo: String!
  hits: Int!
  id: String
  name: String!
  strengthReq: Int!
  type: String!
  updatedAt: DateTime
  weight: Int!
}

input ArmourUpdateInput {
  category: String
  cost: Int
  createdAt: DateTime
  extraInfo: String
  hits: Int
  id: String
  name: String
  strengthReq: Int
  type: String
  updatedAt: DateTime
  weight: Int
}

input ArmourWhereUniqueInput {
  id: String
}

scalar DateTime

type Mutation {
  createOneArmour(data: ArmourCreateInput!): Armour!
  createOneSpell(data: SpellCreateInput!): Spell!
  createOneWeapon(data: WeaponCreateInput!): Weapon!
  deleteOneArmour(where: ArmourWhereUniqueInput!): Armour
  deleteOneSpell(where: SpellWhereUniqueInput!): Spell
  deleteOneWeapon(where: WeaponWhereUniqueInput!): Weapon
  updateOneArmour(data: ArmourUpdateInput!, where: ArmourWhereUniqueInput!): Armour
  updateOneSpell(data: SpellUpdateInput!, where: SpellWhereUniqueInput!): Spell
  updateOneWeapon(data: WeaponUpdateInput!, where: WeaponWhereUniqueInput!): Weapon
}

type Query {
  AllArmour(searchString: String): [Armour!]!
  armour(where: ArmourWhereUniqueInput!): Armour
  spell(where: SpellWhereUniqueInput!): Spell
  Spells(searchString: String): [Spell!]!
  weapon(where: WeaponWhereUniqueInput!): Weapon
  Weapons(searchString: String): [Weapon!]!
}

type Spell {
  cost: String!
  createdAt: DateTime!
  description: String!
  id: String!
  level: Int!
  name: String!
  range: String!
  symbol: String!
  updatedAt: DateTime!
}

input SpellCreateInput {
  cost: String!
  createdAt: DateTime
  description: String!
  id: String
  level: Int!
  name: String!
  range: String!
  symbol: String!
  updatedAt: DateTime
}

input SpellUpdateInput {
  cost: String
  createdAt: DateTime
  description: String
  id: String
  level: Int
  name: String
  range: String
  symbol: String
  updatedAt: DateTime
}

input SpellWhereUniqueInput {
  id: String
}

type Weapon {
  adds: Int!
  category: String!
  cost: Int!
  createdAt: DateTime!
  dexReq: Int!
  dice: Int!
  extraInfo: String!
  id: String!
  length: String!
  name: String!
  range: String!
  strengthReq: Int!
  type: String!
  updatedAt: DateTime!
  weight: Int!
}

input WeaponCreateInput {
  adds: Int!
  category: String!
  cost: Int!
  createdAt: DateTime
  dexReq: Int!
  dice: Int!
  extraInfo: String!
  id: String
  length: String!
  name: String!
  range: String!
  strengthReq: Int!
  type: String!
  updatedAt: DateTime
  weight: Int!
}

input WeaponUpdateInput {
  adds: Int
  category: String
  cost: Int
  createdAt: DateTime
  dexReq: Int
  dice: Int
  extraInfo: String
  id: String
  length: String
  name: String
  range: String
  strengthReq: Int
  type: String
  updatedAt: DateTime
  weight: Int
}

input WeaponWhereUniqueInput {
  id: String
}
